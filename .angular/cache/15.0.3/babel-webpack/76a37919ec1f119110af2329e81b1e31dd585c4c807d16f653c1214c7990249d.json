{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ParallaxService {\n  constructor() {}\n  applyParallax(elem) {\n    // Add event listener\n    window.addEventListener('mousemove', parallax);\n    // Magic happens here\n    function parallax(e) {\n      // console.log(e)\n      const _w = window.innerWidth / 2;\n      const _h = window.innerHeight / 2;\n      // console.log(elem.offsetHeight)\n      //   const _w = 200 / 2;\n      //   const _h = 200 / 2;\n      //    console.log(elem.style.backgroundPosition.split(',').forEach(element => {\n      //     element()  \n      //    }))\n      const _mouseX = e.clientX;\n      const _mouseY = e.clientY;\n      const _depth1 = `${70 - (_mouseX - _w) * 0.01 / 2}% ${30 - (_mouseY - _h) * 0.04 / 2}%`;\n      const _depth2 = `${80 - (_mouseX - _w) * 0.002}% ${30 - (_mouseY - _h) * 0.002}%`;\n      const _depth3 = `${80 - (_mouseX - _w) * 0.006}% ${30 - (_mouseY - _h) * 0.006}%`;\n      const x = `${_depth1}, ${_depth2}, ${_depth3}`;\n      // const x = `${_depth1}`;\n      // console.log(x);\n      elem.style.backgroundPosition = x;\n    }\n  }\n  applyParallax1(elem) {\n    window.addEventListener('mousemove', parallax);\n    // Magic happens here\n    function parallax(e) {\n      // console.log(e)\n      const _w = window.innerWidth / 2;\n      const _h = window.innerHeight / 2;\n      // console.log(elem.offsetHeight)\n      //   const _w = 200 / 2;\n      //   const _h = 200 / 2;\n      //    console.log(elem.style.backgroundPosition.split(',').forEach(element => {\n      //     element()  \n      //    }))\n      const _mouseX = e.clientX;\n      const _mouseY = e.clientY;\n      const _depth1 = `${70 - (_mouseX - _w) * 0.01 / 2}% ${30 - (_mouseY - _h) * 0.04 / 2}%`;\n      const _depth2 = `${80 - (_mouseX - _w) * 0.002}% ${30 - (_mouseY - _h) * 0.002}%`;\n      const _depth3 = `${80 - (_mouseX - _w) * 0.006}% ${30 - (_mouseY - _h) * 0.006}%`;\n      const x = `${_depth1}, ${_depth2}, ${_depth3}`;\n      // const x = `${_depth1}`;\n      // console.log(x);\n      //     top: calc(30% - 20px);\n      // left: calc(75% - 20px);\n      elem.style.left = `${90 + (_mouseX - _w) * 0.006 / 2}%`;\n      elem.style.top = `${90 + (_mouseY - _h) * 0.006 / 2}%`;\n    }\n  }\n}\nParallaxService.ɵfac = function ParallaxService_Factory(t) {\n  return new (t || ParallaxService)();\n};\nParallaxService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ParallaxService,\n  factory: ParallaxService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,eAAe;EAE1BC,eAAgB;EAIhBC,aAAa,CAACC,IAAiB;IAC7B;IACAC,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEC,QAAQ,CAAC;IAE9C;IACA,SAASA,QAAQ,CAACC,CAAM;MACpB;MACF,MAAMC,EAAE,GAAGJ,MAAM,CAACK,UAAU,GAAG,CAAC;MAChC,MAAMC,EAAE,GAAGN,MAAM,CAACO,WAAW,GAAG,CAAC;MAEjC;MACF;MACA;MAEJ;MACA;MACA;MACM,MAAMC,OAAO,GAAGL,CAAC,CAACM,OAAO;MACzB,MAAMC,OAAO,GAAGP,CAAC,CAACQ,OAAO;MACzB,MAAMC,OAAO,GAAG,GAAG,EAAE,GAAC,CAACJ,OAAO,GAAGJ,EAAE,IAAK,IAAK,GAAC,CAAC,KAAK,EAAE,GAAC,CAACM,OAAO,GAAGJ,EAAE,IAAK,IAAK,GAAC,CAAC,GAAG;MACnF,MAAMO,OAAO,GAAG,GAAG,EAAE,GAAC,CAACL,OAAO,GAAGJ,EAAE,IAAI,KAAK,KAAK,EAAE,GAAC,CAACM,OAAO,GAAGJ,EAAE,IAAI,KAAK,GAAG;MAC7E,MAAMQ,OAAO,GAAG,GAAI,EAAE,GAAC,CAACN,OAAO,GAAGJ,EAAE,IAAI,KAAM,KAAK,EAAE,GAAC,CAACM,OAAO,GAAGJ,EAAE,IAAI,KAAK,GAAG;MAC/E,MAAMS,CAAC,GAAG,GAAGH,OAAO,KAAKC,OAAO,KAAKC,OAAO,EAAE;MAC9C;MACA;MACAf,IAAI,CAACiB,KAAK,CAACC,kBAAkB,GAAGF,CAAC;IAEnC;EACF;EAEAG,cAAc,CAACnB,IAAiB;IAC9BC,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEC,QAAQ,CAAC;IAE9C;IACA,SAASA,QAAQ,CAACC,CAAM;MACpB;MACF,MAAMC,EAAE,GAAGJ,MAAM,CAACK,UAAU,GAAG,CAAC;MAChC,MAAMC,EAAE,GAAGN,MAAM,CAACO,WAAW,GAAG,CAAC;MAEjC;MACF;MACA;MAEJ;MACA;MACA;MACM,MAAMC,OAAO,GAAGL,CAAC,CAACM,OAAO;MACzB,MAAMC,OAAO,GAAGP,CAAC,CAACQ,OAAO;MACzB,MAAMC,OAAO,GAAG,GAAG,EAAE,GAAC,CAACJ,OAAO,GAAGJ,EAAE,IAAK,IAAK,GAAC,CAAC,KAAK,EAAE,GAAC,CAACM,OAAO,GAAGJ,EAAE,IAAK,IAAK,GAAC,CAAC,GAAG;MACnF,MAAMO,OAAO,GAAG,GAAG,EAAE,GAAC,CAACL,OAAO,GAAGJ,EAAE,IAAI,KAAK,KAAK,EAAE,GAAC,CAACM,OAAO,GAAGJ,EAAE,IAAI,KAAK,GAAG;MAC7E,MAAMQ,OAAO,GAAG,GAAI,EAAE,GAAC,CAACN,OAAO,GAAGJ,EAAE,IAAI,KAAM,KAAK,EAAE,GAAC,CAACM,OAAO,GAAGJ,EAAE,IAAI,KAAK,GAAG;MAC/E,MAAMS,CAAC,GAAG,GAAGH,OAAO,KAAKC,OAAO,KAAKC,OAAO,EAAE;MAC9C;MACA;MAEJ;MACA;MACIf,IAAI,CAACiB,KAAK,CAACG,IAAI,GAAG,GAAG,EAAE,GAAE,CAACX,OAAO,GAAGJ,EAAE,IAAK,KAAM,GAAC,CAAC,GAAG;MACtDL,IAAI,CAACiB,KAAK,CAACI,GAAG,GAAG,GAAG,EAAE,GAAC,CAACV,OAAO,GAAGJ,EAAE,IAAK,KAAM,GAAC,CAAC,GAAG;IAEtD;EACJ;;AAnEaV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAyB,SAAfzB,eAAe;EAAA0B,YAFd;AAAM","names":["ParallaxService","constructor","applyParallax","elem","window","addEventListener","parallax","e","_w","innerWidth","_h","innerHeight","_mouseX","clientX","_mouseY","clientY","_depth1","_depth2","_depth3","x","style","backgroundPosition","applyParallax1","left","top","factory","providedIn"],"sourceRoot":"","sources":["/Users/bharath/Documents/GitHub/Bharath_portfolio/src/app/services/parallax.service.ts"],"sourcesContent":["import { ElementRef, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParallaxService {\n\n  constructor() { }\n\n\n  \n  applyParallax(elem: HTMLElement) {\n    // Add event listener\n    window.addEventListener('mousemove', parallax);\n\n    // Magic happens here\n    function parallax(e :any) {\n        // console.log(e)\n      const _w = window.innerWidth / 2;\n      const _h = window.innerHeight / 2;\n      \n      // console.log(elem.offsetHeight)\n    //   const _w = 200 / 2;\n    //   const _h = 200 / 2;\n      \n//    console.log(elem.style.backgroundPosition.split(',').forEach(element => {\n//     element()  \n//    }))\n      const _mouseX = e.clientX;\n      const _mouseY = e.clientY;\n      const _depth1 = `${70-(_mouseX - _w) * (0.01)/2}% ${30-(_mouseY - _h) * (0.04)/2}%`;\n      const _depth2 = `${80-(_mouseX - _w) * 0.002}% ${30-(_mouseY - _h) * 0.002}%`;\n      const _depth3 = `${(80-(_mouseX - _w) * 0.006)}% ${30-(_mouseY - _h) * 0.006}%`;\n      const x = `${_depth1}, ${_depth2}, ${_depth3}`;\n      // const x = `${_depth1}`;\n      // console.log(x);\n      elem.style.backgroundPosition = x;\n   \n    }\n  }\n\n  applyParallax1(elem: HTMLElement) {\n    window.addEventListener('mousemove', parallax);\n\n    // Magic happens here\n    function parallax(e :any) {\n        // console.log(e)\n      const _w = window.innerWidth / 2;\n      const _h = window.innerHeight / 2;\n      \n      // console.log(elem.offsetHeight)\n    //   const _w = 200 / 2;\n    //   const _h = 200 / 2;\n      \n//    console.log(elem.style.backgroundPosition.split(',').forEach(element => {\n//     element()  \n//    }))\n      const _mouseX = e.clientX;\n      const _mouseY = e.clientY;\n      const _depth1 = `${70-(_mouseX - _w) * (0.01)/2}% ${30-(_mouseY - _h) * (0.04)/2}%`;\n      const _depth2 = `${80-(_mouseX - _w) * 0.002}% ${30-(_mouseY - _h) * 0.002}%`;\n      const _depth3 = `${(80-(_mouseX - _w) * 0.006)}% ${30-(_mouseY - _h) * 0.006}%`;\n      const x = `${_depth1}, ${_depth2}, ${_depth3}`;\n      // const x = `${_depth1}`;\n      // console.log(x);\n\n  //     top: calc(30% - 20px);\n  // left: calc(75% - 20px);\n      elem.style.left = `${90 +(_mouseX - _w) * (0.006)/2}%`;\n      elem.style.top = `${90+(_mouseY - _h) * (0.006)/2}%`;\n\n    }\n}\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}