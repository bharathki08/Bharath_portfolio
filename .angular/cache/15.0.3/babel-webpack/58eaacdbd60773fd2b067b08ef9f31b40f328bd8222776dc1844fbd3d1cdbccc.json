{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ParallaxService {\n  constructor() {}\n  applyParallax(elem) {\n    // Add event listener\n    window.addEventListener('mousemove', parallax);\n    // Magic happens here\n    function parallax(e) {\n      // console.log(e)\n      const _w = window.innerWidth / 2;\n      const _h = window.innerHeight / 2;\n      // console.log(elem.offsetHeight)\n      //   const _w = 200 / 2;\n      //   const _h = 200 / 2;\n      //    console.log(elem.style.backgroundPosition.split(',').forEach(element => {\n      //     element()  \n      //    }))\n      const _mouseX = e.clientX;\n      const _mouseY = e.clientY;\n      const _depth1 = `${70 - (_mouseX - _w) * 0.01 / 2}% ${30 - (_mouseY - _h) * 0.04 / 2}%`;\n      const _depth2 = `${80 - (_mouseX - _w) * 0.002}% ${30 - (_mouseY - _h) * 0.002}%`;\n      const _depth3 = `${80 - (_mouseX - _w) * 0.006}% ${30 - (_mouseY - _h) * 0.006}%`;\n      const x = `${_depth1}, ${_depth2}, ${_depth3}`;\n      // const x = `${_depth1}`;\n      // console.log(x);\n      elem.style.backgroundPosition = x;\n    }\n  }\n  applyParallax1(elem) {\n    window.addEventListener('mousemove', parallax);\n    // Magic happens here\n    function parallax(e) {\n      // console.log(e)\n      const _w = window.innerWidth / 2;\n      const _h = window.innerHeight / 2;\n      // console.log(elem.offsetHeight)\n      //   const _w = 200 / 2;\n      //   const _h = 200 / 2;\n      //    console.log(elem.style.backgroundPosition.split(',').forEach(element => {\n      //     element()  \n      //    }))\n      const _mouseX = e.clientX;\n      const _mouseY = e.clientY;\n      const _depth1 = `${70 - (_mouseX - _w) * 0.01 / 2}% ${30 - (_mouseY - _h) * 0.04 / 2}%`;\n      const _depth2 = `${80 - (_mouseX - _w) * 0.002}% ${30 - (_mouseY - _h) * 0.002}%`;\n      const _depth3 = `${80 - (_mouseX - _w) * 0.006}% ${30 - (_mouseY - _h) * 0.006}%`;\n      const x = `${_depth1}, ${_depth2}, ${_depth3}`;\n      // const x = `${_depth1}`;\n      // console.log(x);\n      //     top: calc(30% - 20px);\n      // left: calc(75% - 20px);\n      elem.style.left = `${90 + (_mouseX - _w) * 0.006 / 2}%`;\n      elem.style.top = `${90 + (_mouseY - _h) * 0.006 / 2}%`;\n    }\n  }\n}\nParallaxService.ɵfac = function ParallaxService_Factory(t) {\n  return new (t || ParallaxService)();\n};\nParallaxService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ParallaxService,\n  factory: ParallaxService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}